Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> if_statement
Rule 2     statement -> elif_statement
Rule 3     statement -> else_statement
Rule 4     statement -> print_statement
Rule 5     statement -> for_statement
Rule 6     statement -> while_statement
Rule 7     statement -> assignment_statement
Rule 8     statement -> declaration_statement
Rule 9     declaration_statement -> ID EQ NUMBER
Rule 10    if_statement -> ID expression COLON block
Rule 11    elif_statement -> ID expression COLON block
Rule 12    else_statement -> ID COLON block
Rule 13    print_statement -> ID LPAREN STRING RPAREN
Rule 14    for_statement -> ID ID ID expression COLON block
Rule 15    while_statement -> ID expression COLON block
Rule 16    assignment_statement -> ID EQ expression
Rule 17    expression -> ID LT ID
Rule 18    expression -> ID LPAREN ID RPAREN
Rule 19    expression -> ID
Rule 20    expression -> NUMBER
Rule 21    expression -> expression PLUS expression
Rule 22    block -> statement block
Rule 23    block -> statement

Terminals, with rules where they appear

COLON                : 10 11 12 14 15
EQ                   : 9 16
ID                   : 9 10 11 12 13 14 14 14 15 16 17 17 18 18 19
LPAREN               : 13 18
LT                   : 17
NUMBER               : 9 20
PLUS                 : 21
RPAREN               : 13 18
STRING               : 13
error                : 

Nonterminals, with rules where they appear

assignment_statement : 7
block                : 10 11 12 14 15 22
declaration_statement : 8
elif_statement       : 2
else_statement       : 3
expression           : 10 11 14 15 16 21 21
for_statement        : 5
if_statement         : 1
print_statement      : 4
statement            : 22 23 0
while_statement      : 6

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . if_statement
    (2) statement -> . elif_statement
    (3) statement -> . else_statement
    (4) statement -> . print_statement
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . assignment_statement
    (8) statement -> . declaration_statement
    (10) if_statement -> . ID expression COLON block
    (11) elif_statement -> . ID expression COLON block
    (12) else_statement -> . ID COLON block
    (13) print_statement -> . ID LPAREN STRING RPAREN
    (14) for_statement -> . ID ID ID expression COLON block
    (15) while_statement -> . ID expression COLON block
    (16) assignment_statement -> . ID EQ expression
    (9) declaration_statement -> . ID EQ NUMBER

    ID              shift and go to state 10

    statement                      shift and go to state 1
    if_statement                   shift and go to state 2
    elif_statement                 shift and go to state 3
    else_statement                 shift and go to state 4
    print_statement                shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    declaration_statement          shift and go to state 9

state 1

    (0) S' -> statement .



state 2

    (1) statement -> if_statement .

    $end            reduce using rule 1 (statement -> if_statement .)
    ID              reduce using rule 1 (statement -> if_statement .)


state 3

    (2) statement -> elif_statement .

    $end            reduce using rule 2 (statement -> elif_statement .)
    ID              reduce using rule 2 (statement -> elif_statement .)


state 4

    (3) statement -> else_statement .

    $end            reduce using rule 3 (statement -> else_statement .)
    ID              reduce using rule 3 (statement -> else_statement .)


state 5

    (4) statement -> print_statement .

    $end            reduce using rule 4 (statement -> print_statement .)
    ID              reduce using rule 4 (statement -> print_statement .)


state 6

    (5) statement -> for_statement .

    $end            reduce using rule 5 (statement -> for_statement .)
    ID              reduce using rule 5 (statement -> for_statement .)


state 7

    (6) statement -> while_statement .

    $end            reduce using rule 6 (statement -> while_statement .)
    ID              reduce using rule 6 (statement -> while_statement .)


state 8

    (7) statement -> assignment_statement .

    $end            reduce using rule 7 (statement -> assignment_statement .)
    ID              reduce using rule 7 (statement -> assignment_statement .)


state 9

    (8) statement -> declaration_statement .

    $end            reduce using rule 8 (statement -> declaration_statement .)
    ID              reduce using rule 8 (statement -> declaration_statement .)


state 10

    (10) if_statement -> ID . expression COLON block
    (11) elif_statement -> ID . expression COLON block
    (12) else_statement -> ID . COLON block
    (13) print_statement -> ID . LPAREN STRING RPAREN
    (14) for_statement -> ID . ID ID expression COLON block
    (15) while_statement -> ID . expression COLON block
    (16) assignment_statement -> ID . EQ expression
    (9) declaration_statement -> ID . EQ NUMBER
    (17) expression -> . ID LT ID
    (18) expression -> . ID LPAREN ID RPAREN
    (19) expression -> . ID
    (20) expression -> . NUMBER
    (21) expression -> . expression PLUS expression

    COLON           shift and go to state 13
    LPAREN          shift and go to state 14
    ID              shift and go to state 11
    EQ              shift and go to state 15
    NUMBER          shift and go to state 16

    expression                     shift and go to state 12

state 11

    (14) for_statement -> ID ID . ID expression COLON block
    (17) expression -> ID . LT ID
    (18) expression -> ID . LPAREN ID RPAREN
    (19) expression -> ID .

    ID              shift and go to state 17
    LT              shift and go to state 18
    LPAREN          shift and go to state 19
    COLON           reduce using rule 19 (expression -> ID .)
    PLUS            reduce using rule 19 (expression -> ID .)


state 12

    (10) if_statement -> ID expression . COLON block
    (11) elif_statement -> ID expression . COLON block
    (15) while_statement -> ID expression . COLON block
    (21) expression -> expression . PLUS expression

    COLON           shift and go to state 20
    PLUS            shift and go to state 21


state 13

    (12) else_statement -> ID COLON . block
    (22) block -> . statement block
    (23) block -> . statement
    (1) statement -> . if_statement
    (2) statement -> . elif_statement
    (3) statement -> . else_statement
    (4) statement -> . print_statement
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . assignment_statement
    (8) statement -> . declaration_statement
    (10) if_statement -> . ID expression COLON block
    (11) elif_statement -> . ID expression COLON block
    (12) else_statement -> . ID COLON block
    (13) print_statement -> . ID LPAREN STRING RPAREN
    (14) for_statement -> . ID ID ID expression COLON block
    (15) while_statement -> . ID expression COLON block
    (16) assignment_statement -> . ID EQ expression
    (9) declaration_statement -> . ID EQ NUMBER

    ID              shift and go to state 10

    block                          shift and go to state 22
    statement                      shift and go to state 23
    if_statement                   shift and go to state 2
    elif_statement                 shift and go to state 3
    else_statement                 shift and go to state 4
    print_statement                shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    declaration_statement          shift and go to state 9

state 14

    (13) print_statement -> ID LPAREN . STRING RPAREN

    STRING          shift and go to state 24


state 15

    (16) assignment_statement -> ID EQ . expression
    (9) declaration_statement -> ID EQ . NUMBER
    (17) expression -> . ID LT ID
    (18) expression -> . ID LPAREN ID RPAREN
    (19) expression -> . ID
    (20) expression -> . NUMBER
    (21) expression -> . expression PLUS expression

    NUMBER          shift and go to state 27
    ID              shift and go to state 25

    expression                     shift and go to state 26

state 16

    (20) expression -> NUMBER .

    COLON           reduce using rule 20 (expression -> NUMBER .)
    PLUS            reduce using rule 20 (expression -> NUMBER .)
    $end            reduce using rule 20 (expression -> NUMBER .)
    ID              reduce using rule 20 (expression -> NUMBER .)


state 17

    (14) for_statement -> ID ID ID . expression COLON block
    (17) expression -> . ID LT ID
    (18) expression -> . ID LPAREN ID RPAREN
    (19) expression -> . ID
    (20) expression -> . NUMBER
    (21) expression -> . expression PLUS expression

    ID              shift and go to state 25
    NUMBER          shift and go to state 16

    expression                     shift and go to state 28

state 18

    (17) expression -> ID LT . ID

    ID              shift and go to state 29


state 19

    (18) expression -> ID LPAREN . ID RPAREN

    ID              shift and go to state 30


state 20

    (10) if_statement -> ID expression COLON . block
    (11) elif_statement -> ID expression COLON . block
    (15) while_statement -> ID expression COLON . block
    (22) block -> . statement block
    (23) block -> . statement
    (1) statement -> . if_statement
    (2) statement -> . elif_statement
    (3) statement -> . else_statement
    (4) statement -> . print_statement
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . assignment_statement
    (8) statement -> . declaration_statement
    (10) if_statement -> . ID expression COLON block
    (11) elif_statement -> . ID expression COLON block
    (12) else_statement -> . ID COLON block
    (13) print_statement -> . ID LPAREN STRING RPAREN
    (14) for_statement -> . ID ID ID expression COLON block
    (15) while_statement -> . ID expression COLON block
    (16) assignment_statement -> . ID EQ expression
    (9) declaration_statement -> . ID EQ NUMBER

    ID              shift and go to state 10

    block                          shift and go to state 31
    statement                      shift and go to state 23
    if_statement                   shift and go to state 2
    elif_statement                 shift and go to state 3
    else_statement                 shift and go to state 4
    print_statement                shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    declaration_statement          shift and go to state 9

state 21

    (21) expression -> expression PLUS . expression
    (17) expression -> . ID LT ID
    (18) expression -> . ID LPAREN ID RPAREN
    (19) expression -> . ID
    (20) expression -> . NUMBER
    (21) expression -> . expression PLUS expression

    ID              shift and go to state 25
    NUMBER          shift and go to state 16

    expression                     shift and go to state 32

state 22

    (12) else_statement -> ID COLON block .

    $end            reduce using rule 12 (else_statement -> ID COLON block .)
    ID              reduce using rule 12 (else_statement -> ID COLON block .)


state 23

    (22) block -> statement . block
    (23) block -> statement .
    (22) block -> . statement block
    (23) block -> . statement
    (1) statement -> . if_statement
    (2) statement -> . elif_statement
    (3) statement -> . else_statement
    (4) statement -> . print_statement
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . assignment_statement
    (8) statement -> . declaration_statement
    (10) if_statement -> . ID expression COLON block
    (11) elif_statement -> . ID expression COLON block
    (12) else_statement -> . ID COLON block
    (13) print_statement -> . ID LPAREN STRING RPAREN
    (14) for_statement -> . ID ID ID expression COLON block
    (15) while_statement -> . ID expression COLON block
    (16) assignment_statement -> . ID EQ expression
    (9) declaration_statement -> . ID EQ NUMBER

  ! shift/reduce conflict for ID resolved as shift
    $end            reduce using rule 23 (block -> statement .)
    ID              shift and go to state 10

  ! ID              [ reduce using rule 23 (block -> statement .) ]

    statement                      shift and go to state 23
    block                          shift and go to state 33
    if_statement                   shift and go to state 2
    elif_statement                 shift and go to state 3
    else_statement                 shift and go to state 4
    print_statement                shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    declaration_statement          shift and go to state 9

state 24

    (13) print_statement -> ID LPAREN STRING . RPAREN

    RPAREN          shift and go to state 34


state 25

    (17) expression -> ID . LT ID
    (18) expression -> ID . LPAREN ID RPAREN
    (19) expression -> ID .

    LT              shift and go to state 18
    LPAREN          shift and go to state 19
    PLUS            reduce using rule 19 (expression -> ID .)
    $end            reduce using rule 19 (expression -> ID .)
    ID              reduce using rule 19 (expression -> ID .)
    COLON           reduce using rule 19 (expression -> ID .)


state 26

    (16) assignment_statement -> ID EQ expression .
    (21) expression -> expression . PLUS expression

    $end            reduce using rule 16 (assignment_statement -> ID EQ expression .)
    ID              reduce using rule 16 (assignment_statement -> ID EQ expression .)
    PLUS            shift and go to state 21


state 27

    (9) declaration_statement -> ID EQ NUMBER .
    (20) expression -> NUMBER .

  ! reduce/reduce conflict for $end resolved using rule 9 (declaration_statement -> ID EQ NUMBER .)
  ! reduce/reduce conflict for ID resolved using rule 9 (declaration_statement -> ID EQ NUMBER .)
    $end            reduce using rule 9 (declaration_statement -> ID EQ NUMBER .)
    ID              reduce using rule 9 (declaration_statement -> ID EQ NUMBER .)
    PLUS            reduce using rule 20 (expression -> NUMBER .)

  ! $end            [ reduce using rule 20 (expression -> NUMBER .) ]
  ! ID              [ reduce using rule 20 (expression -> NUMBER .) ]


state 28

    (14) for_statement -> ID ID ID expression . COLON block
    (21) expression -> expression . PLUS expression

    COLON           shift and go to state 35
    PLUS            shift and go to state 21


state 29

    (17) expression -> ID LT ID .

    COLON           reduce using rule 17 (expression -> ID LT ID .)
    PLUS            reduce using rule 17 (expression -> ID LT ID .)
    $end            reduce using rule 17 (expression -> ID LT ID .)
    ID              reduce using rule 17 (expression -> ID LT ID .)


state 30

    (18) expression -> ID LPAREN ID . RPAREN

    RPAREN          shift and go to state 36


state 31

    (10) if_statement -> ID expression COLON block .
    (11) elif_statement -> ID expression COLON block .
    (15) while_statement -> ID expression COLON block .

  ! reduce/reduce conflict for $end resolved using rule 10 (if_statement -> ID expression COLON block .)
  ! reduce/reduce conflict for ID resolved using rule 10 (if_statement -> ID expression COLON block .)
  ! reduce/reduce conflict for $end resolved using rule 10 (if_statement -> ID expression COLON block .)
  ! reduce/reduce conflict for ID resolved using rule 10 (if_statement -> ID expression COLON block .)
    $end            reduce using rule 10 (if_statement -> ID expression COLON block .)
    ID              reduce using rule 10 (if_statement -> ID expression COLON block .)

  ! $end            [ reduce using rule 11 (elif_statement -> ID expression COLON block .) ]
  ! ID              [ reduce using rule 11 (elif_statement -> ID expression COLON block .) ]
  ! $end            [ reduce using rule 15 (while_statement -> ID expression COLON block .) ]
  ! ID              [ reduce using rule 15 (while_statement -> ID expression COLON block .) ]


state 32

    (21) expression -> expression PLUS expression .
    (21) expression -> expression . PLUS expression

  ! shift/reduce conflict for PLUS resolved as shift
    COLON           reduce using rule 21 (expression -> expression PLUS expression .)
    $end            reduce using rule 21 (expression -> expression PLUS expression .)
    ID              reduce using rule 21 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 21

  ! PLUS            [ reduce using rule 21 (expression -> expression PLUS expression .) ]


state 33

    (22) block -> statement block .

    $end            reduce using rule 22 (block -> statement block .)
    ID              reduce using rule 22 (block -> statement block .)


state 34

    (13) print_statement -> ID LPAREN STRING RPAREN .

    $end            reduce using rule 13 (print_statement -> ID LPAREN STRING RPAREN .)
    ID              reduce using rule 13 (print_statement -> ID LPAREN STRING RPAREN .)


state 35

    (14) for_statement -> ID ID ID expression COLON . block
    (22) block -> . statement block
    (23) block -> . statement
    (1) statement -> . if_statement
    (2) statement -> . elif_statement
    (3) statement -> . else_statement
    (4) statement -> . print_statement
    (5) statement -> . for_statement
    (6) statement -> . while_statement
    (7) statement -> . assignment_statement
    (8) statement -> . declaration_statement
    (10) if_statement -> . ID expression COLON block
    (11) elif_statement -> . ID expression COLON block
    (12) else_statement -> . ID COLON block
    (13) print_statement -> . ID LPAREN STRING RPAREN
    (14) for_statement -> . ID ID ID expression COLON block
    (15) while_statement -> . ID expression COLON block
    (16) assignment_statement -> . ID EQ expression
    (9) declaration_statement -> . ID EQ NUMBER

    ID              shift and go to state 10

    block                          shift and go to state 37
    statement                      shift and go to state 23
    if_statement                   shift and go to state 2
    elif_statement                 shift and go to state 3
    else_statement                 shift and go to state 4
    print_statement                shift and go to state 5
    for_statement                  shift and go to state 6
    while_statement                shift and go to state 7
    assignment_statement           shift and go to state 8
    declaration_statement          shift and go to state 9

state 36

    (18) expression -> ID LPAREN ID RPAREN .

    COLON           reduce using rule 18 (expression -> ID LPAREN ID RPAREN .)
    PLUS            reduce using rule 18 (expression -> ID LPAREN ID RPAREN .)
    $end            reduce using rule 18 (expression -> ID LPAREN ID RPAREN .)
    ID              reduce using rule 18 (expression -> ID LPAREN ID RPAREN .)


state 37

    (14) for_statement -> ID ID ID expression COLON block .

    $end            reduce using rule 14 (for_statement -> ID ID ID expression COLON block .)
    ID              reduce using rule 14 (for_statement -> ID ID ID expression COLON block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: reduce/reduce conflict in state 27 resolved using rule (declaration_statement -> ID EQ NUMBER)
WARNING: rejected rule (expression -> NUMBER) in state 27
WARNING: reduce/reduce conflict in state 31 resolved using rule (if_statement -> ID expression COLON block)
WARNING: rejected rule (elif_statement -> ID expression COLON block) in state 31
WARNING: reduce/reduce conflict in state 31 resolved using rule (if_statement -> ID expression COLON block)
WARNING: rejected rule (while_statement -> ID expression COLON block) in state 31
WARNING: Rule (elif_statement -> ID expression COLON block) is never reduced
WARNING: Rule (while_statement -> ID expression COLON block) is never reduced
